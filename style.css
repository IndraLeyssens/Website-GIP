/* ================================================= */
/* CSS custom properties (variables) */
/* ================================================= */
:root {
    /* Colors */
    --white: rgb(241, 240, 235);
    --white-90: rgba(241, 240, 235, 0.9);
    --white-70: rgba(241, 240, 235, 0.7);
    --gray: rgb(36, 91, 90);
    --gray-50: rgba(36, 91, 90, .5);
    --gray-20: rgba(36, 91, 90, .2);
    --gray-10: rgba(36, 91, 90, .1);
    --red-03: rgba(234, 82, 92);
    --blue-70: rgba(11, 148, 141, 0.7);


    --light-blue: rgb(11, 148, 141);
    --darker-blue: rgb(36, 91, 90);
    --Red: rgb(234, 82, 92);
    --cream-white: rgb(241, 240, 235);
    --accent: #D11F3E;

    /* Font sizes */
    /* Min values based on the scale: 18px base, 1.250 ratio */
    /* Max values based on the scale: 18px base, 1.5 ratio */
    /* Using clamp() to create fluid typography */

    --h1-size: clamp(3.052rem, 8vw + 1rem, 7.594rem);
    --h2-size: clamp(2.441rem, 8vw + 1rem, 5.063rem);
    --h3-size: clamp(1.953rem, 2vw + 1rem, 3.375rem);
    --h4-size: clamp(1.563rem, 2vw + 1rem, 2.25rem);
    --h5-size: clamp(1.25rem, 2vw + 1rem, 1.5rem);
    --h6-size: clamp(1rem, 1vw + 1rem, 1.125rem);
    --body-size: var(--h6-size);
}

#bgvid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 140vh;
    object-fit: cover;
    z-index: -1;
}



/* ================================================= */
/* Typography & Images */
/* ================================================= */
html {
    font-size: 16px;
    font-family: 'Manrope', sans-serif;
    line-height: 1.5;
}

body {
    font-size: var(--body-size);
    color: var(--);
}

h1,
h2,
h4 {
    font-family: 'Poppins', sans-serif;
    font-weight: 700;
    letter-spacing: -0.07em;
}

h1,
h2,
h3,
blockquote {
    margin: 0 0 10rem;
}

h3,
h5,
h6,
cite {
    font-weight: 300;
}

h1 {
    font-size: var(--h1-size);
    line-height: 1.2;
    color: var(--white-90);
}

h2 {
    font-size: var(--h2-size);
    line-height: 1.2;
    color: var(--blue-70);
}

h3 {
    font-size: var(--h3-size);
    color: var(--darker-blue);
}

h4 {
    font-size: var(--h4-size);
    margin: 0;
    color: var(--darker-blue);
}

h5 {
    font-size: var(--h5-size);
    margin: 0 0 1rem;
}

h6 {
    font-size: var(--h6-size);
    margin: 0 0 1rem;
}

img {
    max-width: 100%;
    max-height: 100%;
    display: block;
}

figure {
    margin: 0;
}

figure img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

blockquote {
    font-size: var(--h5-size);
    color: var(--white-90);
}

cite {
    display: block;
    margin-top: 2rem;
    font-size: var(--body-size);
}

h5,
h6,
cite {
    color: var(--gray-50);
}

a {
    text-decoration: none;
    color: var(--gray-50);
}

button {
    font-weight: 700;
    appearance: none;
    background-color: transparent;
    border: none;
    cursor: pointer;
}



/* ================================================= */
/* Header */
/* ================================================= */
#logo {
    width: 100px;
    height: 100px;

}

header {
    padding: 1.5rem 1.5rem 0;
    margin-bottom: 4rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
    z-index: 100;
}

.unstyled {
    list-style: none;
    padding: 0;
    margin: 0;
}

header nav {
    display: none;
}

header nav ul {
    display: flex;
    align-items: center;
    gap: 2rem;
}

header nav a {
    color: var(--white);
    transition: color .2s ease-in-out;
}

#menu-button {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 3.5px;
    width: 2.5rem;
    height: 2.5rem;
    align-items: center;
    justify-content: center;
}

#menu-button span {
    width: 25px;
    height: 2.5px;
    border-radius: 2px;
    background-color: var(--gray);
    transition: transform .2s ease-in-out, opacity .2s ease-in-out, background-color .4s ease-in-out;
    transform-origin: center;
}

:root[menu-open] #menu-button span:nth-child(1) {
    transform: translate3d(0, 6px, 0) rotate(45deg);
}

:root[menu-open] #menu-button span:nth-child(2) {
    transform: scaleX(0);
    opacity: 0;
}

:root[menu-open] #menu-button span:nth-child(3) {
    transform: translate3d(0, -6px, 0) rotate(-45deg);
}

#mobile-menu-container {
    position: fixed;
    inset: 0;
    background-color: var(--gray);
    text-align: center;
    display: grid;
    place-content: center;
    z-index: 99;
    height: 0;
    transition: height .4s cubic-bezier(.14, .65, .15, 1);
}

#mobile-menu-container a {
    font-size: var(--h4-size);
    width: 100%;
    display: block;
    padding: 1rem 0;
    color: white;
    opacity: 0;
    transition: opacity .2s ease-in-out;
}

:root[menu-open] #mobile-menu-container {
    height: 100%;
}

:root[menu-open] #mobile-menu-container a {
    opacity: 1;
}

:root[menu-open] #menu-button span {
    background-color: white;
}

#logo rect,
#logo path {
    transition: stroke .4s ease-in-out, fill .4s ease-in-out;
}

:root[menu-open] #logo rect {
    stroke: white;
}

:root[menu-open] #logo path {
    fill: white;
}

:root[menu-open] {
    overflow: hidden;
}



/* ================================================= */
/* Hero section */
/* ================================================= */
#hero {
    text-align: center;
    padding: 0 1.5rem 4rem;
    margin-bottom: 4rem;
    border-bottom: 1px solid var(--gray-10);
}

#hero h3 {
    color: var(--red-03);
    font-size: var(--h4-size);
}

.social {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 4rem;
}

.social a {
    font-weight: 700;
    transition: color .2s ease-in-out;
    display: inline-block;
    padding: 0 1rem;
}

.social a:hover {
    color: var(--accent);
}

.social li {
    display: flex;
    align-items: center;
}

.social li:not(:last-child)::after {
    content: '';
    height: 1px;
    width: 1.5rem;
    display: inline-block;
    background-color: var(--gray-20);
}

#icon-scroll-down {
    border: 1px solid var(--accent);
    border-radius: 6.25rem;
    display: inline-block;
    padding: 1.25rem 1rem 1rem;
}

#icon-scroll-down svg {
    animation: 5s cubic-bezier(.87, -.41, .19, 1.44) infinite point-down;
}

@keyframes point-down {

    0%,
    10%,
    40%,
    100% {
        transform: translate3d(0, 0, 0);
    }

    25% {
        transform: translate3d(0, 1rem, 0);
    }
}



/* ================================================= */
/* Main (gallery) */
/* ================================================= */
.quote {
    padding: 3rem 1.5rem;
    background-color: var(--blue-70);
    margin: 0 1.5rem;
    text-align: center;
    border-radius: 1rem;
}

.quote button {
    margin: 0 auto;
}

button.link-button {
    color: var(--white);
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem 2rem;
    border-radius: 10rem;
    transition: background-color .2s ease-in-out, gap .2s ease-in-out, color .2s ease-in-out;
}

button.link-button:hover {
    background-color: var(--gray);
    padding: 1rem 2rem;
    gap: 2rem;
    color: white;
}

button.link-button svg path {
    transition: stroke .2s ease-in-out;
}

button.link-button:hover svg path {
    stroke: white;
}

#gallery {
    display: grid;
    gap: 4rem;
    margin-bottom: 4rem;
    padding-bottom: 4rem;
    border-bottom: 1px solid var(--gray-10);
}

.gallery--item hgroup {
    padding: 1.5rem;
}

.gallery--item hgroup span {
    height: 1px;
    width: 1.5rem;
    display: inline-block;
    background-color: var(--gray-20);
    vertical-align: middle;
    margin: 0 .5rem;
}

.gallery--item img {
    transform: scale(1.2);
    transition: transform .2s ease-in-out;
}

.gallery--item figure {
    overflow: hidden;
    aspect-ratio: 16/9;
}

.gallery--item figure:hover img {
    transform: scale(1);
}


/* ================================================= */
/* Form */
/* ================================================= */

.container-form {
    width: 100%;
    max-width: 768px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2rem 2rem 5rem;
    background-color: $code;
}

@media (min-width: 768px) {
    .container-form {
        flex-direction: row;
        align-items: center;
            background-color: var(--white);
    }
}

.cta-form {
    margin-bottom: 2rem;
    text-align: center;
}

@media (min-width: 768px) {
    .cta-form {
        margin-bottom: 0;
        margin-right: 2rem;
        text-align: left;
        width: 780px;
    }
}

.cta-form h2 {
    font-size: 1.5rem;
    width: 100%;
    max-width: 25ch;
    margin: 0 auto;
    text-align: center;
}

@media (min-width: 768px) {
    .cta-form h2 {
        text-align: left;
        margin: 0;
    }
}


.cta-form p {
    margin-top: 1rem;
    font-size: 1rem;
    width: 100%;
    max-width: 24ch;
}


.form {
    align-self: center;
}
 
#form {
    display: flex;
    justify-content: center;
}

// I would use the BEM method here for declaring styles,
// but for the sake of clarity, I decided not to.*

// Just some basic input field styling.
.form__input {
    width: clamp(120px, 50vw, 420px);
    height: 2.5rem;
    padding: 0 1.25rem;
    border: 1px solid $black;
    border-radius: 2px;
    margin: 0.625rem auto;
    transition: all 250ms;
}

@media (min-width: 768px) {
    .form__input {
        width: clamp(120px, 35vw, 420px);
    }
}

// This is basically saying when the form__input class is in focus
&:focus {
    outline: none;
    border-top-color: var(white-70);
}

// How to read this:
/* When the input field (.form__input) is in focus, 
         transform the .form__label and change colors*/
/* ALSO, if the input field's placeholder is NOT shown (when the input field has content),
         transform the .form__label and change colors. */
&:focus+.form__label,
&:not(:placeholder-shown)+.form__label {
    transform: translateY(-4.50rem) scale(1);
    color: $black;
}

/* THIS PART IS IMPORTANT!! */
/* The block below hides the placeholder entirely. */
/* For all intents and purposes, the placeholder no longer exists. */
/* What shows on the input field is only the label*. */
/* HOWEVER, the input fields still recognizes that the placeholder exists!*/
/* The placeholder is just invisible. We need the placeholder to exist for
         some weird CSS stuff. If we skip this, we can't make it CSS-only. */
&::placeholder {
    display: none;
    color: transparent;

    // Prevents users from highlighting the placeholder.
    -webkit-user-select: none;
    /* Safari */
    -ms-user-select: none;
    /* IE 10 and IE 11 */
    user-select: none;
    /* Standard syntax */
}

// How to read this:
/* When the placeholder is NOT shown,
         style the top border. */
/* This makes the top border fade-out when the placeholder disappears. */
&:not(:placeholder-shown) {
    border-top-color: var(--white-70);
}


/* ================================================= */
/* Footer */
/* ================================================= */
footer {
    text-align: center;
    padding: 0 1.5rem 4rem;
}

footer h5 {
    margin-bottom: 1.5rem;
    margin-top: 2rem;
}

footer button {
    margin: 0 auto 4rem;
}



/* ================================================= */
/* 768px+ */
/* ================================================= */
@media screen and (min-width: 768px) {
    header {
        padding: 4rem 4rem 0;
        margin-bottom: 8rem;
    }

    header nav {
        display: block;
    }

    #menu-button {
        display: none;
    }

    header nav a:hover {
        color: var(--gray);
    }

    #hero {
        padding: 0 4rem 8rem;
        margin-bottom: 8rem;
    }

    .quote {
        padding: 4rem;
        margin: 0 4rem;
    }

    #gallery {
        margin-bottom: 8rem;
        padding-bottom: 8rem;
    }

    .gallery--item hgroup {
        padding: 2rem 4rem;
    }

    footer {
        padding: 0 4rem 8rem;
    }
}



/* ================================================= */
/* 980px+ */
/* ================================================= */
@media screen and (min-width: 980px) {
    #gallery {
        grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));
    }

    .quote {
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin: 0 0 0 4rem;
    }
}



/* ================================================= */
/* 1200px+ */
/* ================================================= */
@media screen and (min-width: 1200px) {

    h1,
    h2,
    h3 {
        max-width: 60%;
        margin-inline: auto;
    }
}